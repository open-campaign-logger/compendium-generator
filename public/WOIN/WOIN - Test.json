{
  "version": 2,
  "type": "campaign",
  "original": null,
  "title": "WOIN - Test",
  "description": "What's Old is new Again (WOIN) SRD material.'.",
  "imageUrl": "",
  "campaignEntries": [
    {
      "rawText": "",
      "rawPublic": "# License\r\n## woinrules.com\r\n\r\nThis page is the introduction to the WOIN Rules Reference Document (WRRD), and is a developer tool. If you are looking for an introduction to the game as a potential player, [click here instead](http://www.woinrpg.com/about-whats-old-is-new).\r\n\r\nThis document contains the rules in their basic form.  It does not include explanations, descriptions, examples, guidelines, and all the other material that makes up the core rulebooks.\r\n\r\n## WOIN Rules Reference Document v1.2 (OGL)\r\n\r\nThis entire WOIN Rules Reference Document and the Bestiary is designated  Open Gaming Content except for:\r\n\r\n- Artwork and logos.\r\n- The names WOIN, OLD, NEW, NOW, What's OLD is NEW, EN Publishing, EN World, and any product names.\r\n- Any trademarks or names of real world items, brands, or entities.\r\n- The names of characters, places, and settings.\r\n\r\nArtwork and logos.\r\n\r\nThe names WOIN, OLD, NEW, NOW, What's OLD is NEW, EN Publishing, EN World, and any product names.\r\n\r\nAny trademarks or names of real world items, brands, or entities.\r\n\r\nThe names of characters, places, and settings.\r\n\r\nYou may freely use this material in your own publications, fan creations, tools, or websites subject to the terms of the OGL v1.0a.\r\n\r\n## WOIN Rules Reference Document v1.2 (CC)\r\n\r\nThis entire WOIN Rules Reference Document and the Bestiary  is provided to you free of charge under the terms of the Creative Commons Attribution 4.0 International License (CC-BY-4.0) except for:\r\n\r\n- Artwork and logos.\r\n- The names WOIN, OLD, NEW, NOW, What's OLD is NEW, EN Publishing, EN World, and any product names.\r\n- Any trademarks or names of real world items, brands, or entities.\r\n- **The names of characters, places, and settings.**\r\n\r\nArtwork and logos.\r\n\r\nThe names WOIN, OLD, NEW, NOW, What's OLD is NEW, EN Publishing, EN World, and any product names.\r\n\r\nAny trademarks or names of real world items, brands, or entities.\r\n\r\nThe names of characters, places, and settings.\r\n\r\nYou are free to use this content in any manner permitted by that license as long as you include the following attribution statement in your own work:\r\n\r\nThis work includes material taken from the WOIN Rules Reference Document (WRRD) by EN Publishing and available at https://www.woinrules.com, based on the What's OLD is NEW (WOIN) game system available at https://www.woinrpg.com. The WRRD is licensed under the Creative Commons Attribution 4.0 International License available at https://creativecommons.org/licenses/by/4.0/legalcode.\r\n\r\nSection 5 of CC-BY-4.0 includes a Disclaimer of Warranties and Limitation of Liability that limits our liability to you.\r\n\r\n## WOIN Rules Reference Document v1.2 (ORC)\r\n\r\n### ORC Notice\r\n\r\nThe WOIN Rules Reference Document is licensed under the ORC License held in the Library of Congress at TX000[number tbd] and available online at various locations including http://www.a5esrd.com and others. All warranties are disclaimed as set forth therein.\r\n\r\n### Attribution\r\n\r\nIf you use our Licensed Material in your own published work, please credit us in your product as follows:\r\n\r\nWOIN Rules Reference Document, © EN Publishing, http://www.woinrules.com; based on the What's OLD is NEW roleplaying game system by Russ Morrissey, http://www.woinrpg.com.\r\n\r\n### Reserved Material\r\n\r\nReserved Material elements in this product include:\r\n\r\n- Artwork and logos.\r\n- The names WOIN, OLD, NEW, NOW, What's OLD is NEW, EN Publishing, EN World, and any product names.\r\n- Any trademarks or names of real world items, brands, or entities.\r\n- The names of characters, places, and settings.\r\n\r\nArtwork and logos.\r\n\r\nThe names WOIN, OLD, NEW, NOW, What's OLD is NEW, EN Publishing, EN World, and any product names.\r\n\r\nAny trademarks or names of real world items, brands, or entities.\r\n\r\nThe names of characters, places, and settings.\r\n\r\n## What This Is And What It Isn't\r\n\r\nThis document is a tool for third party developers. It can also be used as a reference tool for people playing WOIN games. However, it is not a subsitute for the actual rulebooks, and lacks much of the descriptive or contextual text which accompanies the rules. For this reason, it may be difficult to learn the rules only using this document.\r\n\r\n## Equipment\r\n\r\nEquipment and starships are found separately on the [WOINGEAR website](http://www.woingear.com).\r\n",
      "labels": [
        "WOIN",
        "License"
      ],
      "tagSymbol": "~",
      "tagValue": "License"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - Eras of Play\r\n# Eras of Play\r\n\r\nThe core rules of What’s OLD is NEW deal with three broad eras. While these can be broken down into numerous smaller ages, this is not necessary to play the game.\r\n\r\nEach of the three standalone books, O.L.D., N.O.W., and N.E.W., presents a single era in detail.\r\n\r\nArchaic.  This era covers the stone age, all the way through medieval times, up to the rennaissance and introduction of early firearms. It features swords, elves, and dragons.  It is covered in detail in [O.L.D.](https://enpublishingrpg.com/collections/whats-old-is-new-woin/products/o-l-d-the-fantasy-heroic-roleplaying-game-v1-2) which focuses on medieval fantasy.\r\n\r\nModern. This era broadly covers the 20th and early 21st century. It features martial arts action heroes, tricked out vehicles, superspies, and ninjas. It is covered in detail in [N.O.W.](https://enpublishingrpg.com/collections/whats-old-is-new-woin/products/n-o-w-the-modern-action-roleplaying-game-v1-2) which focuses on 80s-style contemporary action.\r\n\r\nFuture.  This era covers anything beyond the present day. It features starships, laser swords, blasters, and psionics.  It is covered in detail in [N.E.W.](https://enpublishingrpg.com/collections/whats-old-is-new-woin/products/n-e-w-the-science-fiction-roleplaying-game-v1-2) which focuses on galactic exploration, colonization, and conflict.\r\n\r\nA game setting can be based on one of these three eras, or it can mix and match to put wizards on starships.  In terms of what technology to include, the default rule (unless the setting says otherwise) is that any technology from an earlier era is available in a later era at double the price, and that technology from a later era is not available in a previous era.  These items are designated archaic, modern, and future in this rules reference document.\r\n\r\nThe three supernatural elements - magic, chi, and psionics, can each be included in any of these eras.\r\n\r\n# \r\n\r\nAdvancement Level\r\n\r\n## 0. Stone Age\r\n\r\nSpears, axes, basic tools.\r\n\r\n### 0.5. Bronze Age\r\n\r\nIrrigation, chariots, bronze weapons, shields, ancient history.\r\n\r\n## 1. Iron Age\r\n\r\nSwords, metal tools.\r\n\r\n## 2. Medieval Age\r\n\r\nWindmills, horseshoes, crop rotation, compasses, crossbows.\r\n\r\n## 3. Renaissance Age\r\n\r\nMuskets, clocks, telescopes, lenses, printing press.\r\n\r\n## 4. Industrial Age\r\n\r\nEarly automobiles.\r\n\r\n### 4.5 Information Age\r\n\r\nEarly computers, car phones, jets.\r\n\r\n## 5. Digital Age\r\n\r\nElectronics, computers, satellites, automobiles, aircraft, nuclear weapons\r\n\r\n### 5.5. Quantum Age\r\n\r\nFlying cars, internal electronics, super computers.\r\n\r\n## 6. Fusion Age\r\n\r\nInvisible wearable tech, genetic engineering, solar system colonization.\r\n\r\n## 7. Energy Age\r\n\r\nEnergy weapons, nearby star systems explored.\r\n\r\n## 8. Superluminal Age\r\n\r\nEarly FTL travel; burgeoning multi-system government.\r\n\r\n## 9. Stellar Age\r\n\r\nAdvanced FTL travel; galactic exploration; thousands of colonies; transporters.\r\n\r\n## 10. Galactic Age\r\n\r\nVery advanced FTL; dyson spheres and ringworlds; full galactic colonization; basic time travel.\r\n\r\n## 11. High Galactic Age\r\n\r\nMultiple galaxies colonized and explored.\r\n\r\n## 12. Universal Age\r\n\r\nAdvanced time travel; black hole power systems; universal colonization.\r\n\r\n## 13. High Universal Age\r\n\r\nAbility to restructure or move entire galaxies; control of dark matter.\r\n\r\n## 14. Dark Energy Age\r\n\r\nCan survive, prevent, or cause the end of the universe; manipulation of dark energy.\r\n\r\n## 15. Multiverse Age\r\n\r\nOmnipotence; unlimited power and ability; multiple universes (multiverse).\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - Eras of Play"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - Cinematic Mode\r\n# Cinematic Mode\r\n\r\nCombat in WOIN can be deadly—even an advanced character can be downed by just one or two shots. For a more heroic feel, the GM can opt to use Cinematic Mode.\r\n\r\n- In Cinematic Mode, characters and creatures add a LUC dice pool when calculating their total Health. Lucky characters can be very resilient, if sometimes accidentally so.\r\n- Adult characters also gain an additional LUC die, and old characters gain a further LUC die, representing experience.\r\n- Additionally, when in cinematic mode, you ignore the skill requirement for using higher quality equipment; anybody can benefit from superior gear.\r\n\r\nIn Cinematic Mode, characters and creatures add a LUC dice pool when calculating their total Health. Lucky characters can be very resilient, if sometimes accidentally so.\r\n\r\nAdult characters also gain an additional LUC die, and old characters gain a further LUC die, representing experience.\r\n\r\nAdditionally, when in cinematic mode, you ignore the skill requirement for using higher quality equipment; anybody can benefit from superior gear.\r\n\r\nCinematic Mode may be especially appropriate for space opera or high fantasy settings.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - Cinematic Mode"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - The Game\r\n# The Game\r\n\r\nWhat’s OLD is NEW is a flexible game system which focuses on three genres: traditional fantasy, explosive modern action, and futuristic sci-fi. It is supported by a wide range of sourcebooks, worlds, and adventures.\r\n\r\n## The System\r\n\r\nWhat's OLD is NEW uses a [d6 dice pool system](/rules-of-the-game/dice-pools) vs. a difficulty benchmark.  The game only uses d6s.\r\n\r\nCharacters are created using a [life-path system](/characters).  After choosing a [heritage](/characters/heritages), players choose an [origin](/characters/origins) career, followed by four further [careers](/characters/careers).  Each adds to [attributes](/characters/attributes) and [skills](/characters/skills), and grants specific exploits.\r\n\r\nWOIN also features freeform magic, vehicle combat, starship combat,  martial arts & chi, psionics & mutants, stronghold building, and more.\r\n\r\n## Which Genre?\r\n\r\nThe rules in this rules reference document are compatible with medieval fantasy, contemporary action, and future sci-fi, but may not be thematically suitable for all settings and campaigns.  A game using only medieval fantasy rules will not use the Warp Maneuver exploit.\r\n\r\nThis rules reference document, however, presents rules from all three genres of play.  The skills list, therefore, includes skills from herbalism to astrophysics, and the exploits list contains exploits from Counterspelling to Wingovers. Similarly, the race sections contain all options from all three genres, from mountain dwarves to mutants to androids.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - The Game"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - The Environment\r\n# Environment\r\n\r\nAdventurers can’t always rely on the fact that they’ll be in a comfortable, temperate environment. Deserts, volcano bases, mountaintops, howling storms, blizzards, driving rain, underwater lairs, and more can contrive to create a wide array of environments and can make for extremely memorable set-piece battles.\r\n\r\nThe following environmental templates can be applied to areas the size of a world or as small as part of a room.\r\n\r\nEnvironments sometimes inflict a persistent condition, such as Sick or Fatigued, which only wears off after a night’s sleep. If a condition mentions that it applies after an hour, it is considered a persistent condition.\r\n\r\nAreas can have more than one environmental type. For example, an arctic wasteland might be cold and windy.\r\n\r\nSome creatures are immune to certain environments. SOAK 5 (or more) of an appropriate damage type (where relevant) makes a creature immune to a condition. Some abilities or exploits may also provide condition immunity.\r\n\r\nAn environment doesn’t typically inflict actual damage. Anything in the environment that’s dangerous enough to inflict damage (such as an actual fire, lava pit, pool of acid, liquid nitrogen, etc.) is a hazard and can do direct damage to those who touch it. Environments do not have such extreme effects, can typically be traversed, but may have effects if characters spend too long in them.\r\n\r\nEnvironment types have the following characteristics.\r\n\r\n## Acidic\r\n\r\nAcidic environments can be caused by acid rain or chemical smoke. An acidic environment causes irritation and pain. Those who spend more than an hour in an acidic environment suffer the Pained condition.\r\n\r\n## Cold\r\n\r\nFrom arctic wastelands to ice dragon lairs, cold environments can be debilitating and deadly. After an hour, cold environments inflict the Slow condition due to sluggish reactions and slowing metabolisms. Note that 5 points of cold SOAK, such as that from protective gear, protects from cold.\r\n\r\n## Difficult Terrain\r\n\r\nSnow, mud, rubble, debris, swamp, shallow water, deep undergrowth, and more can create difficult terrain. Difficult terrain halves ground movement SPEED.\r\n\r\n## Dim/Smoky/Rain/Snow\r\n\r\nDim light, obviously caused by a lack of light, can also represent smoky, snowy, or raining environments where vision is compromised. Dim light renders a creature which starts its turn in the area Blind (although this does not progress beyond the first stage); darker areas inflict the severe Blind condition automatically unless the creature has some way of illuminating the area or seeing in the dark. Unlike other environmental effects, this wears off as soon as the environmental effect goes away.\r\n\r\n## Hot\r\n\r\nFrom hot volcanic ninja lairs to burning warehouses, a hot environment is an environment similar to that of a desert; somewhere in the region of 100+ degrees Fahrenheit (or 45 degrees Celsius). It causes Fatigue after an hour. A scorching environment is significantly hotter, and burns those within it; those who begin their turn in a scorching area gain the Burning condition.\r\n\r\n## Radioactive\r\n\r\nRadioactive areas are very dangerous. Those who begin their turn in a radioactive area gain the Sick condition. Those who spend an hour in the area contract radiation sickness (see the section on illnesses and diseases).\r\n\r\n## Slippery\r\n\r\nA slippery area, caused by things like icy ground or an oil slick, counts as difficult terrain (half SPEED).\r\n\r\n## Thick/Thin Atmosphere\r\n\r\nWhile both thick and thin atmospheres are very dissimilar, their effects on creatures are not so different. Both types of atmosphere can quickly tire a creature not used to it; after an hour, creatures gain the Fatigued condition.\r\n\r\n## Tremors\r\n\r\nUnstable environments could be caused by earthquakes, sailing ships under extreme fire, or buildings about to explode. Tremors count as difficult terrain (half SPEED). At the start of each round, all creatures must make a Routine [10] AGI check or fall prone. Quakes make for an extremely difficult environment—horizontal movement is counted as climbing—and the AGI check is Difficult [16] and additionally inflicts 2d6 blunt damage on a failure (as well as knocking the creature prone).\r\n\r\n## Underwater\r\n\r\nAn underwater environment eliminates all fire-based effects, reduces fire damage from weapons and spells by –1d6, increases electricity damage by +1d6, and counts as difficult terrain. It is also airless (see suffocation, under thick/thin atmospheres).\r\n\r\n## Vacuum\r\n\r\nA vacuum is an area with no atmosphere. It is a myth that vacuums cause spontaneous explosion of human tissue, although exposure is certainly not healthy.\r\n\r\nThe biggest danger from a vacuum is simply the lack of air. Without some way to breathe, living creatures in a vacuum will quickly suffocate. Lack of oxygen uses a similar process to that when an unconscious character is dying. Create a countdown dice pool equal in size to the character’s END attribute. Each turn, the dice pool is rolled and any 6s rolled are removed from the pool. When the final die is removed, the character falls unconscious and the unconscious and dying process begins as normal.\r\n\r\n## Wet\r\n\r\nA wet environment is a humid or rainy one—tropical jungles, aboard a sailing ship, in driving rain. In these environments, the Burning condition has no effect and fire-based weapons cannot cause critical hits.\r\n\r\n## Windy\r\n\r\nWindy environments are caused by rushing air (or other gases). Wind always has a direction of movement, which is determined beforehand. Moving into the wind counts as difficult terrain. In a hurricane, it is harder— to move into the wind, a Challenging [13] STR check is required. Additionally, at the start of every turn, all creatures must make a Challenging [13] STR check or be pushed 1d6 squares in the direction of the wind.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - The Environment"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - Objects\r\n# Objects\r\n\r\nAn object's statistics are based on its size and its composition. These two pieces of information are all that is needed to determine an inanimate object's DEFENSE, HEALTH, and SOAK.\r\n\r\n## HEALTH\r\n\r\nThe health of an object is simply the square root of its weight in pounds (if known). If the exact weight is not known, use the average figures below. An object is broken when reduced to half HEALTH and destroyed when reduced to zero. This does not apply to creatures or characters, whose HEALTH is based on other attributes.\r\n\r\n## DEFENSE\r\n\r\nAn object's DEFENSE is based on its size.\r\n\r\n## SOAK\r\n\r\nAn object's SOAK is based on the material it is made of. If an object is made of multiple materials, simply pick the most prevalent.\r\n\r\n## Reinforced Objects\r\n\r\nReinforced objects have double the normal HEALTH.\r\n\r\n## Ray Shielding\r\n\r\nRay-shielded objects gain +10 SOAK vs. energy damage.\r\n\r\n## Fireproofed\r\n\r\nFireproofed objects gain +10 SOAK vs. heat damage.\r\n\r\n## Spellproofed\r\n\r\nSpellproofed objects gain +10 SOAK vs. magical damage (defined as any type of damage produced by magic). Already magic-resistant materials like feysilver cannot be further spellproofed.\r\n\r\n## Larger Objects\r\n\r\nObjects of 1,000 tons or more (about 2,000,000 lb) are considered Class I objects, and use the Starship Hull Scale.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - Objects"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - Vehicle Combat\r\n# Vehicle Combat\r\n\r\nSometimes characters will engage in combat from aboard a vehicle; this may involve vehicles fighting each other, or pedestrians fighting against or with vehicles. Vehicles follow the following rules when involved in a combat situation.\r\n\r\nVehicles are placed on the battlemap, and usually take up two or more squares (motorcycles only take up one square). A vehicle’s stats indicate the number of occupants (including the driver) it may carry.\r\n\r\nThe vehicle is essentially an extension of its driver. It acts on the driver’s Initiative, and moves on the driver’s turn. Other occupants act on their own turns, as normal. However, passengers move for free automatically with the vehicle, as you would expect.\r\n\r\n## Initiative\r\n\r\nThe driver rolls Initiative as normal. The vehicle’s Handling score provides a bonus or penalty to the driver’s Initiative roll.\r\n| Handling | Initiative |\r\n| --- | --- |\r\n| 1 | +1d6 |\r\n| 2 | +1d6 |\r\n| 3 | — |\r\n| 4 | — |\r\n| 5 | –1d6 |\r\n| 6 | –2d6 |\r\n\r\n## Movement\r\n\r\nA vehicle moves forward on its driver’s turn. The driver spends one of their actions driving the vehicle. The passengers do not need to spend actions to move, as they move for free with the vehicle.\r\n\r\nA vehicle moves its current velocity; on the driver’s turn, as part of his driving action, they may increase or decrease the vehicle’s velocity by an amount up to its Acceleration score. For example, if the vehicle is moving at Speed 10, and has an Accel of 3, they may brake and reduce the Speed to 7, or they may put theirs foot down and increase it to 13. The vehicle cannot move faster than the Speed score listed in its stat block.\r\n\r\n## Turning\r\n\r\nThe driver may turn the vehicle. They may alter its course by up to 45 degrees. Every vehicle has a turning circle which indicates how many squares it must move forward before making a turn; as long as the vehicle follows this rule, leaving the requisite amount of squares between turns of up to 45 degrees, it may turn as often in a round as the driver wishes.\r\n\r\nA vehicle’s turning circle is equal to its current speed multiplied by its Handling, divided by 5 (round down to a minimum of 1). A Handling 3 car moving at a velocity of 6 has a turning circle of (3 x 6) ÷ 5 = 3. A smaller Handling 1 motorcycle moving at the same velocity has a turning circle of just 1 hex, while a Handling 5 truck at that speed has a turning circle of 6.\r\n\r\n## Actions\r\n\r\nThe occupants of a vehicle can act as normal. They may shoot with handheld weapons normally, or they can use vehicle-mounted weapons (using the gunnery skill); or, of course, they can take any other action they are capable of.\r\n\r\nThe driver must use one of their actions moving the vehicle (unless it is stationary); they can use their  remaining action as they wish. However, any action taken while driving suffers a -2d6 complication penalty.\r\n\r\n## Firing Weapons\r\n\r\nWeapons can be operated by vehicle occupants. Weapons have a firing arc, unless they are turreted, granting a 360-degree firing arc. Line of sight is required unless the weapon is designated Artillery. Some weapons are linked, which means one occupant fires both at the same time.\r\n\r\nAn occupant uses Agility or Intuition to fire (as normal), and applies the usual range increment penalties. Attacks are made against the target vehicle’s Defense; vehicles add their current speed to their Defense score, making fast-moving vehicles harder to hit.\r\n\r\nWeapon damage is reduced by a vehicle’s SOAK and then applied to its HEALTH.\r\n\r\n### Vehicle Movement Modifiers to Hit\r\n\r\n| Situation | Modifier |\r\n| --- | --- |\r\n| Stationary target | +1d6 |\r\n| Rear attack | +1d6 |\r\n\r\nForward-mounted weapons +1d6\r\n| Per range increment | –1d6 |\r\n| --- | --- |\r\n| Aft-mounted weapons | –1d6 |\r\n\r\nShooting at occupants. If a vehicle’s occupant is targeted by a weapon, the occupant gains the benefit of the vehicle’s Soak score or his own Soak score, whichever is higher, and uses his own Ranged Defense score or the vehicle’s (whichever is higher—remember, the vehicle adds its current speed to its Defense score). Occupants also have cover (–2d6 to hit) unless they are on a motorcycle or other open vehicle.\r\n\r\n## Critical hits\r\n\r\nCritical hits work slightly differently when a vehicle is the target. Roll on the following table when a critical hit is scored.\r\n| 2d6 | Location | Effect |\r\n| --- | --- | --- |\r\n| 2 | Weapon | Weapon is damaged and inoperable |\r\n| 3 | Tire | Spin out (see below) |\r\n| 4 | Engine | Reduce max Speed by 1d6 |\r\n| 5 | Driver | 1d6 damage to driver (no Soak) |\r\n| 6 | Windshield | Reduce Handling by 1 class |\r\n| 7 | Chassis | No additional effect |\r\n| 8 | Passenger | 1d6 damage to passenger (no Soak) |\r\n| 9 | Fuel tank | Vehicle catches fire, taking 1d6 damage each round; roll to end this condition as you would any other condition. |\r\n| 10 | Engine | Reduce Accel by 1. |\r\n| 11 | Tire | Spin out (see below). |\r\n| 12 | Weapon | Weapon is damaged and inoperable. |\r\n\r\n## Collisions\r\n\r\nThere are four types of collisions: head-on, rear-end, T‑bone, and sideswipe. When a collision takes place, all vehicles spin out unless the driver makes a successful check (see below). Both vehicles take damage equal to three times the collision speed:\r\n\r\n- **Head-on.**Two vehicles collide and each is in the other’s front arc. Add their current speeds together.\r\n- **Rear-end.** A vehicle collides with the rear arc of another vehicle. Deduct the black vehicle’s speed from the red vehicle’s speed.\r\n- **T-bone.** A vehicle collides with the side arc of another vehicle. Use the speed of the red car.\r\n- **Sideswipe.** The result of a maneuver in which two vehicles collide with the side arcs of each other. Use half of the faster vehicle’s speed.\r\n\r\nHead-on. Two vehicles collide and each is in the other’s front arc. Add their current speeds together.\r\n\r\nRear-end. A vehicle collides with the rear arc of another vehicle. Deduct the black vehicle’s speed from the red vehicle’s speed.\r\n\r\nT-bone. A vehicle collides with the side arc of another vehicle. Use the speed of the red car.\r\n\r\nSideswipe. The result of a maneuver in which two vehicles collide with the side arcs of each other. Use half of the faster vehicle’s speed.\r\n\r\n## Spinning Out\r\n\r\nSpinning out occurs when:\r\n\r\n1. The driver is injured.\r\n\r\n2. A tire is damaged.\r\n\r\n3. A collision takes place.\r\n\r\n4. The vehicle enters or begins its turn on slippery terrain (oil slicks, ice, etc.)\r\n\r\n5. After a jump.\r\n\r\nThe driver may attempt to prevent the vehicle from spinning out by making an AGI check (bolstered by their driving skill, if they have it) with a difficulty equal to three times the vehicle’s current speed.\r\n\r\nIf the vehicle spins out, it comes to a stop in a randomly determined square half its current speed from the point where it span out. Also roll 1d6; on a roll of 5, it ends up on its side, and on a 6 it ends up upside down.\r\n\r\nA vehicle which spins out causes 1d6 damage to all occupants. This damage cannot be SOAKed.\r\n\r\n## Stunts\r\n\r\nA number of maneuvers are available as exploits, including emergency stop, handbrake turn (J-turn), and more. The driver may use his action to perform these exploits.\r\n\r\nAll vehicles can attempt a jump as long as a ramp is present. The vehicle jumps as part of its Speed (it cannot accelerate or decelerate while airborne), but the maximum distance it can jump is equal to its half its current speed divided by its Handling (round down). For example, a generic compact automobile moving at Speed 12 with Handling 3 can jump 2 squares, while a motorcycle moving at Speed 18 with Handling 1 can jump 9 squares.\r\n\r\nJumping is one thing, however. Landing is another. A vehicle automatically spins out (see above) when it lands after a jump, unless the driver is able to prevent it from doing so.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - Vehicle Combat"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - Countdowns\r\n# Countdowns\r\n\r\nA countdown takes place when there is an unknown time limit before something occurs. It is used in the following situations:\r\n\r\n- **Death.**An unconscious character uses the countdown mechanic as he slips towards death.\r\n- **Illness.**Disease and illness use the countdown mechanic as symptoms worsen.\r\n- **Drowning or suffocation**. Characters who cannot breath (underwater, or some other reason) use the countdown mechanic to determine when they lose consciousness.\r\n- **Starship explosions**. In N.E.W., badly damaged starships use a countdown pool to determine when they explode; hopefully the heroes can escape the ship before it does!\r\n- **Other ticking clocks**.There are many other situations where a ticking clock is relevant. Occasions where you need a tense situation as a character tries to do something before something else happens are ideal for it. Can a climber scale a crumbling cliff before it collapses? Can a thief pick a lock before the magical alarms go off? Can a Smallfolk burglar recover the magic goblet and escape the dragon's lair before it wakes up?\r\n\r\nDeath. An unconscious character uses the countdown mechanic as he slips towards death.\r\n\r\nIllness. Disease and illness use the countdown mechanic as symptoms worsen.\r\n\r\nDrowning or suffocation. Characters who cannot breath (underwater, or some other reason) use the countdown mechanic to determine when they lose consciousness.\r\n\r\nStarship explosions. In N.E.W., badly damaged starships use a countdown pool to determine when they explode; hopefully the heroes can escape the ship before it does!\r\n\r\nOther ticking clocks.There are many other situations where a ticking clock is relevant. Occasions where you need a tense situation as a character tries to do something before something else happens are ideal for it. Can a climber scale a crumbling cliff before it collapses? Can a thief pick a lock before the magical alarms go off? Can a Smallfolk burglar recover the magic goblet and escape the dragon's lair before it wakes up?\r\n\r\nThe countdown is started by forming a dice pool. Different situations will determine the size of that dice pool – a dying character uses one equal in size to his ENDURANCE dice pool, for example, while cliffs or magical alarms will have their dice pool size set by the GM. The larger the dice pool, the longer you – probably! - have.\r\n\r\nEach turn, the dice pool is rolled. Usually it's rolled by the player in question – she rolls her own death dice, or her own drowning dice.\r\n\r\nAny dice which comes up with a six is removed from the dice pool, and play continues.\r\n\r\nEventually the last dice will be removed from the dice pool. It is then that the character dies, the trap explodes, or the soldier looks in the crate.\r\n\r\n## Fast, Medium, And Slow Countdowns\r\n\r\nThe default countdown—removing a dice on a roll of 6—is a slow countdown. Countdowns can run down faster than this, however. For faster countdowns, dice are removed on rolls of 5–6, or even 4–6.\r\n\r\nA countdown is always expressed in terms of a fast, medium, or slow countdown. The default countdown (if not specified) is a slow countdown expiring on rolls of 6.\r\n\r\n- Fast (4-6)\r\n- Medium (5-6)\r\n- Slow (6)\r\n\r\nFast (4-6)\r\n\r\nMedium (5-6)\r\n\r\nSlow (6)\r\n\r\n## Stabilizing and Replenishing Countdowns\r\n\r\nSome countdowns can be stabilized or replenished. A stabilized countdown simply stops counting down— the trap has been disarmed in time, or the character is no longer in danger of dying.\r\n\r\nReplenishing a countdown allows extra dice to be added, effectively extending it. In this way, illnesses can be pushed back “up” the countdown and dying characters can be stabilized with emergency healing.\r\n\r\nNot all countdowns can be stabilized or replenished; the specific countdown will clearly indicate whether or not these are appropriate. Sometimes the cliff is going to crumble whatever you do—it’s just a question of whether you get to the top before that happens!\r\n\r\n## Countdowns and Stages\r\n\r\nMost countdowns are fairly simple—the dice pool is rolled until it reaches zero, at which point an effect (death, explosion, and so on) takes place. However, some countdowns have effects which take place at various stages throughout the process. Stages take place as the dice pool reaches certain sizes. For example, an illness might have a character becoming blind when the pool reaches two dice, and dying when it reaches zero dice. All countdowns technically have two stages—the starting condition and the ending condition.\r\n\r\n## Average Countdown Length\r\n\r\nThe table below shows the expected (average) number of rolls a countdown will last for before expiry. This can be used by the GM to set appropriate countdown dice pools. Note, however, that countdown pools can be very 'swingy' and a large pool might still deplete quickly while a small one might take longer.\r\n| Dice Pool | Slow | Medium | Fast |  | (6) | (5–6) | (4–6) |\r\n| --- | --- | --- | --- | --- | --- | --- | --- |\r\n| 1d6 | 6 | 3 | 2 |\r\n| 2d6 | 9 | 4 | 3 |\r\n| 3d6 | 11 | 5 | 3 |\r\n| 4d6 | 12 | 6 | 4 |\r\n| 5d6 | 13 | 6 | 4 |\r\n| 6d6 | 14 | 7 | 4 |\r\n| 7d6 | 15 | 7 | 4 |\r\n| 8d6 | 15 | 7 | 4 |\r\n| 9d6 | 16 | 7 | 5 |\r\n| 10d6 | 17 | 8 | 5 |\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - Countdowns"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - Dice Pools\r\n# Dice Pools\r\n\r\n## Core Mechanic\r\n\r\nThe core resolution mechanic of the game is a dice pool based attribute check. Actions, including attacks, are performed by making attribute checks.  To make an attribute check, form a dice pool and attempt to beat a difficulty benchmark set by the GM.\r\n\r\n## Maximum Dice Pool\r\n\r\nThe maximum dice pool that a character can form is based on their grade.  A starting character can form a dice pool of up to 5d6. Additional grades add to this maximum pool size.\r\n\r\nTry the Dice Pool Calculator\r\n\r\n## Attribute Checks\r\n\r\nDice pools are formed using attributes, skills, and equipment. You can only use one attribute pool, one skill pool, and one equipment pool.\r\n\r\nAdd the dice pool from an attribute plus any skill to form an attribute check.\r\n\r\nFor example, to climb a wall you might add 3d6 from AGILITY and 2d6 from climbing to form a 5d6 dice pool.\r\n\r\n## Equipment\r\n\r\nEquipment quality contributes to the dice pool as follows.\r\n\r\nStandard equipment simply allows you to perform an action normally.  If basic equipment is not available, improvised equipment inflicts a -2d6 penalty.\r\n\r\nThe number of dice that equipment contributes to a dice pool can never exceed the number of dice tha skills contribute to it; you need a certain degree of expertise to fully benefit from higher quality equipment. If the equipment dice exceed the skill dice, reduce the equipment dice to equal the skill dice.\r\n\r\nThis includes armor (skill in light, medium, heavy, or powered), weapons (skills in swords, bows, rifles, staves, pistols, etc.), and general equipment for which an associated skill might be relevant (skill in meteorology when using ship's sensors to analyse an atmospheric fluctuation, for example).\r\n\r\n## Group Checks\r\n\r\nWhen a group check is called for, every PC makes a check and the check succeeds if more PCs succeed than fail (i.e. half or more of the PCs succeed). It is assumed that stronger PCs are helping weaker ones, and weaker PCs are hindering stronger ones in a group check.\r\n\r\n## Aiding\r\n\r\nWhen characters aid one another, add together their base attributes and determine the resultant dice pool of the total. The GM will decide if, and how many characters can contribute - for example, only two people at a time might be able to break down a door.\r\n\r\nFor example, a character with STR 6 (3d6) aided by another character with STR 6 (3d6) combine to form an attribute of 12 (4d6).\r\n\r\n## Optional Rule: Gearmasters\r\n\r\nTo make the game more equipment focused rather than attribute and skill focused, in Cinematic Mode the dice pool maximum can optionally be applied only to attributes + skills. Gear quality may be added on top after capping, in the same way that exploits can. This changes the flavor of the game and makes the acquisition of high quality equipment a more central part. This will also increase dice pool sizes, and make characters generally more powerful.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - Dice Pools"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - Difficulty Benchmarks\r\n# Difficulty Benchmarks\r\n\r\nThere are two types of difficulty benchmark: simple and acccurate. Simple benchmarks are easier to use in-play, while accurate benchmarks are better for more simulationist games.\r\n\r\n## Simple Benchmarks\r\n\r\n## Accurate Benchmarks\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - Difficulty Benchmarks"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - Luck\r\n# LUCK\r\n\r\nLUCK is a special attribute. It is used as a replenishable resource which can modify other die rolls and perform special actions. It represents luck, fate, chance, destiny faith, divine favor, karma, and more. Luck can be interpreted in any way by characters and creatures who use it. For some, it is merely coincidence and serendipity; for others it represents cool and mojo; while for still others it may be divine in origin, representing faith and blessings. However the character interprets the concept of luck, it is used in the same way.\r\n\r\nEach player should form a LUCK dice pool.  As dice are used from the LUCK pool, simply discard them.  LUCK can be used to:\r\n\r\n1. Add dice to any attribute check on a 1:1 basis.\r\n2. Deduct dice from someone else's attribute check on a 1:1 basis.\r\n3. Absorb damage on a 1:1 basis (roll as many LUC dice as you wish, and deduct the total from the damage).\r\n4. Add dice to a damage roll on a 1:1 basis.\r\n5. Gain one bonus action per turn by spending a LUC die. This can only happen during a character’s own turn.\r\n6. Ignore an inflicted temporary condition as a reaction to the effect which causes it.\r\n7. Perform other special actions granted by careers and exploits.\r\n\r\nAdd dice to any attribute check on a 1:1 basis.\r\n\r\nDeduct dice from someone else's attribute check on a 1:1 basis.\r\n\r\nAbsorb damage on a 1:1 basis (roll as many LUC dice as you wish, and deduct the total from the damage).\r\n\r\nAdd dice to a damage roll on a 1:1 basis.\r\n\r\nGain one bonus action per turn by spending a LUC die. This can only happen during a character’s own turn.\r\n\r\nIgnore an inflicted temporary condition as a reaction to the effect which causes it.\r\n\r\nPerform other special actions granted by careers and exploits.\r\n\r\nLUC dice can only be used within an encounter; you cannot use LUC dice during downtime, or on daily checks. And the GM should disallow the use of LUC if she feels that a player is simply blowing all their LUCk on a check because it’s the only one they’ll make that day. In game terms, being able to invest all your LUC in one go makes sense only if you’ve had, or will have, a number of other chances to be unlucky in the day (you’ve either saved up a lucky moment or will have a chance to “pay it back”).\r\n\r\n## Exploding Dice\r\n\r\nLUCK dice \"explode\".  This means that whenever a 6 is rolled, the die is rolled again and the new roll added to the original 6.  This process is repeated if subsequent 6s are rolled. It is recommended that LUCK dice be a different color to other dice so that they can be easily distinguished.\r\n\r\n## Leadership\r\n\r\nThe Leadership exploit allows you to donate your LUC dice to others. Without this exploit, you may only spend LUC on yourself. Characters with the Leadership exploit may donate one or more of their available LUC dice to another character as a free reaction to their attempting an attribute check. You must declare this before the ally rolls their check.\r\n\r\n## Replenishing LUCK\r\n\r\nOnce per day, a character may replenish his LUCK pool. Some careers or traditions allow for an additional replenishment; these do not stack, and you cannot gain more than one additional daily replenishment.\r\n\r\n## Other Uses of LUCK\r\n\r\nOther uses of LUCK manipulate situations where the odds are normally even.\r\n\r\n1. **When determining a 50/50 chance of an outcome, roll a**Routine [10] LUCK check instead.  Characters with higher LUCK succeed more often on an ostensibly 50/50 chance.\r\n2. When randomly determining a PC, have each player roll LUCK.  Either the highest or the lowest wins, depending on the situation.\r\n\r\nWhen determining a 50/50 chance of an outcome, roll a Routine [10] LUCK check instead.  Characters with higher LUCK succeed more often on an ostensibly 50/50 chance.\r\n\r\nWhen randomly determining a PC, have each player roll LUCK.  Either the highest or the lowest wins, depending on the situation.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - Luck"
    },
    {
      "rawText": "",
      "rawPublic": "# Rule - Movement\r\n# Movement\r\n\r\nMovement is a vital part of any combat encounter. Any creature can use one action to move up to its SPEED. A creature’s SPEED indicates the number of 5-foot increments (squares) it can move in one action (it also indicates its normal speed in miles-per-hour).\r\n\r\nSPEED is the total of the raw dice pool of STRENGTH and AGILITY plus one relevant skill.  Movement skills include (but are not limited to) running, climbing, swimming, flying, and zero-g.\r\n\r\n- **Movement methods.**For non-primary movement methods, the movement rate is halved.  For most characters, this means that walking/running is at the full rate, and climbing, swimming, zero-g, etc. are at half rate (after adding the bonus from the skill).  Some exploits may grant a full movement rate.  Some creatures (such as birds) may have a different primary movement mode, and walk/run at half speed. A skill cannot turn a movement method into a primary method; only an exploit can do that.\r\n- **Hustling**. A character who moves with two actions in a turn is “hustling,” and effectively moving at twice its normal speed. Creatures with more than two actions available may not move more than twice in a turn. An Olympic sprinter typically has a SPEED of 10 or more, and is using both actions to run, resulting in movement in the range of 20 miles per hour.\r\n- **Difficult terrain.**Difficult terrain (deep snow, swamp, ice, high or low gravity, etc.) halves ground movement rates. Some exploits may allow full movement rates on one or more difficult terrain types.\r\n- **Vehicles.**A vehicle's SPEED is also its maximum speed in tens of miles per hour. A vehicle with a SPEED of 12 has a maximum speed of 120mph.\r\n- **Diagonal movement.** If a square grid is being used, a diagonal movement counts as 5’, but creatures may not move diagonally around a corner.\r\n- **Climbing and balancing.** Climbing is an AGI check. A successful check allows the climber to move at her climb speed up a vertical surface. The climber need only make one check per turn—this check applies to all climbing movement in that turn. Balancing on a narrow ledge or beam is a form of climbing. A failed check simply means that the character cannot climb the wall or object. She may attempt another check next turn. A high quality climbing kit can assist with climbing. The surface determines the difficulty of the climb.\r\n\r\nMovement methods. For non-primary movement methods, the movement rate is halved.  For most characters, this means that walking/running is at the full rate, and climbing, swimming, zero-g, etc. are at half rate (after adding the bonus from the skill).  Some exploits may grant a full movement rate.  Some creatures (such as birds) may have a different primary movement mode, and walk/run at half speed. A skill cannot turn a movement method into a primary method; only an exploit can do that.\r\n\r\nHustling. A character who moves with two actions in a turn is “hustling,” and effectively moving at twice its normal speed. Creatures with more than two actions available may not move more than twice in a turn. An Olympic sprinter typically has a SPEED of 10 or more, and is using both actions to run, resulting in movement in the range of 20 miles per hour.\r\n\r\nDifficult terrain. Difficult terrain (deep snow, swamp, ice, high or low gravity, etc.) halves ground movement rates. Some exploits may allow full movement rates on one or more difficult terrain types.\r\n\r\nVehicles. A vehicle's SPEED is also its maximum speed in tens of miles per hour. A vehicle with a SPEED of 12 has a maximum speed of 120mph.\r\n\r\nDiagonal movement. If a square grid is being used, a diagonal movement counts as 5’, but creatures may not move diagonally around a corner.\r\n\r\nClimbing and balancing. Climbing is an AGI check. A successful check allows the climber to move at her climb speed up a vertical surface. The climber need only make one check per turn—this check applies to all climbing movement in that turn. Balancing on a narrow ledge or beam is a form of climbing. A failed check simply means that the character cannot climb the wall or object. She may attempt another check next turn. A high quality climbing kit can assist with climbing. The surface determines the difficulty of the climb.\r\n| Surface | Difficulty |\r\n| --- | --- |\r\n| Cliff, rough, many handholds | Challenging [13] |\r\n| Brick or stone wall, few handholds | Difficult [16] |\r\n| Ice or smooth metal | Demanding [21] |\r\n| Overhand or ceiling | Demanding [21] |\r\n| Narrow ledge or plank | Challenging [13] |\r\n| Tightrope | Strenuous [25] |\r\n\r\nFighting while climbing. Fighting while hanging from a wall is difficult. A non-climber attacking a climber gains a +2d6 bonus to the attack. A climber attacking a nonclimber suffers a –2d6 penalty. If both combatants are climbing, nobody gets any bonuses or penalties.\r\n\r\nCreatures with primary climbing modes. If a creature has climbing as a natural movement mode, it simply moves its Speed along walls and ceilings with no checks requires or combat checks imposed.\r\n\r\nFalling. Characters who fall from a height take 1d6 damage for every 10’ fallen. (Falls of less than 10’ do not cause damage.) Any fall results in the character landing prone unless an AGI check with a difficulty value equal to the number of feet fallen is made (this represents an attempt to reduce falling damage by jumping down; see below).\r\n\r\nJumping. Every character and creature has a “free” Jump allowance noted on its character sheet or stat block. This is a distance that the character may make a running jump without making any check at all; it simply happens automatically (for a standing jump, simply half the values). A jump counts as one action.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Rule - Movement"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Alchemy\r\n# Alchemy\r\n\r\nCommon skills: alchemy\r\n\r\nAlchemy is a simple extended task. Using LOGIC and various skills, characters can accomplish a variety of things. Any character can attempt to use alchemy in order to solve a problem or achieve a goal. Alchemy often involves at least a touch of magic. As an extended skill task, alchemy is used for more mundane chemical purposes. Examples of mundane uses of alchemy include:\r\n\r\n- Removing a permanent condition.\r\n- Melting a lock with acid.\r\n- Treating a disease.\r\n- Create a strong glue.\r\n- Creating a poison or an antidote (for poisons, an opposed task is needed vs. the target’s Defense, assuming the poison can be delivered in food or drink; it does 2d6 poison damage plus 1d6 for each complexity level used, which means that the longer you spend making a poison, the more deadly it is).\r\n- Burn or combust materials like metal and stone.\r\n\r\nRemoving a permanent condition.\r\n\r\nMelting a lock with acid.\r\n\r\nTreating a disease.\r\n\r\nCreate a strong glue.\r\n\r\nCreating a poison or an antidote (for poisons, an opposed task is needed vs. the target’s Defense, assuming the poison can be delivered in food or drink; it does 2d6 poison damage plus 1d6 for each complexity level used, which means that the longer you spend making a poison, the more deadly it is).\r\n\r\nBurn or combust materials like metal and stone.\r\n\r\nLike herbs, alchemical concoctions can also be used to inflict conditions, thus creating a love potion or a sleep draught. The concoction must be delivered (imbibed by the target, or similar). A concoction which is eaten or drunk is an hourly task, a poultice, salve, or ointment is a daily task, and a gas, incense, or smoke is a weekly task.\r\n\r\nThe traditional, legendary uses of alchemy (transforming lead into gold, or creating an elixir of immortality) are covered in the magic rules.\r\n\r\nIf the concoction needs a duration (such as an antidote that will protect the imbiber from a certain poison), the duration equals one time increment of the extended task. Characters can choose to increase the tasks’s complexity (say, from hourly to daily) in order to gain a longer duration.\r\n\r\nThe check is a simple opposed one vs. the target’s Defense or Mental Defense, and success inflicts a condition, with a critical success inflicting a severe condition.\r\n\r\nThe players start by declaring their intentions. This goal may be anything they wish, although they may find some goals too hard to accomplish. It might be to devise an acid to melt the lock on a cell door, save an ally who has been turned to stone by a gorgon, or build an explosive. The GM sets the difficulty as normal, and characters may attempt LOGIC checks until they have reached the target number of successes (typically three successes). The complexity and duration of the task are established as normal. Alchemy is a classic example of a very simple use of the extended task mechanism.\r\n\r\nAlchemy is an acceptable way to accomplish many tasks, even if other methods are available. A locked door can be picked or hacked by a burglar, or an alchemist might attempt to open it by melting the lock with alchemical acid. The difficulty of the task does not change—if it’s a Difficult [16] task to pick the lock, then it’s a Difficult [16] alchemical task also.\r\n\r\n## Poison Crafting\r\n\r\n| Time | Poison |\r\n| --- | --- |\r\n| 1 minute | 2d6 |\r\n| 1 hour | 3d6 |\r\n| 1 day | 4d6 |\r\n| 1 week | 5d6 |\r\n| 1 month | 6d6 |\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Skill"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Alchemy"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Chases\r\n# Chases\r\n\r\nCommon skills: running, driving, piloting, jumping, climbing, stealth, bluffing, swimming.\r\n\r\nA chase is an opposed extended task. The first to reach six wins is the winner of a chase situation (although the GM can modify this for longer or shorter chases). Multiple people can be involved in a chase, each making their own checks.\r\n\r\nA simple foot chase simply involves STR or AGI checks, along with the running skill. A vehicle chase may instead use AGI and driving, or a starfighter chase may use AGI and piloting.\r\n\r\nA more complex chase involves other skills. The target chooses the action (they might elect to climb a wall, dive into an asteroid field, jump a canyon, and so on), and the pursuers must match it. Examples of actions can be seen below.\r\n\r\n### Foot chases\r\n\r\n- **Climb a wall (climbing vs. climbing)**Jump an alleyway (jumping vs. jumping)Disappear into a crowd (stealth vs. perception)Swim a river (swimming vs. swimming)Squeeze through a tight gap (acrobatics vs. acrobatics)Balance along a narrow ledge (acrobatics or climbing)Use a hidden shortcut (local knowledge vs perception)Cause a distraction (bluff vs. perception)Cause an obstruction or obstacle (varies)Duck into a blind alley (stealth vs. perception)Get somebody to give the pursuers false directions (bluffing vs. local knowledge)\r\n- Climb a wall (climbing vs. climbing)\r\n- **Jump an alleyway (jumping vs. jumping)**Disappear into a crowd (stealth vs. perception)Swim a river (swimming vs. swimming)Squeeze through a tight gap (acrobatics vs. acrobatics)Balance along a narrow ledge (acrobatics or climbing)Use a hidden shortcut (local knowledge vs perception)Cause a distraction (bluff vs. perception)Cause an obstruction or obstacle (varies)Duck into a blind alley (stealth vs. perception)Get somebody to give the pursuers false directions (bluffing vs. local knowledge)Climb a wall (climbing vs. climbing)\r\n- **Disappear into a crowd (stealth vs. perception)**Swim a river (swimming vs. swimming)Squeeze through a tight gap (acrobatics vs. acrobatics)Balance along a narrow ledge (acrobatics or climbing)Use a hidden shortcut (local knowledge vs perception)Cause a distraction (bluff vs. perception)Cause an obstruction or obstacle (varies)Duck into a blind alley (stealth vs. perception)Get somebody to give the pursuers false directions (bluffing vs. local knowledge)Climb a wall (climbing vs. climbing)\r\n- **Swim a river (swimming vs. swimming)**Squeeze through a tight gap (acrobatics vs. acrobatics)Balance along a narrow ledge (acrobatics or climbing)Use a hidden shortcut (local knowledge vs perception)Cause a distraction (bluff vs. perception)Cause an obstruction or obstacle (varies)Duck into a blind alley (stealth vs. perception)Get somebody to give the pursuers false directions (bluffing vs. local knowledge)Climb a wall (climbing vs. climbing)\r\n- **Squeeze through a tight gap (acrobatics vs. acrobatics)**Balance along a narrow ledge (acrobatics or climbing)Use a hidden shortcut (local knowledge vs perception)Cause a distraction (bluff vs. perception)Cause an obstruction or obstacle (varies)Duck into a blind alley (stealth vs. perception)Get somebody to give the pursuers false directions (bluffing vs. local knowledge)Climb a wall (climbing vs. climbing)\r\n- **Balance along a narrow ledge (acrobatics or climbing)**Use a hidden shortcut (local knowledge vs perception)Cause a distraction (bluff vs. perception)Cause an obstruction or obstacle (varies)Duck into a blind alley (stealth vs. perception)Get somebody to give the pursuers false directions (bluffing vs. local knowledge)Climb a wall (climbing vs. climbing)\r\n- **Use a hidden shortcut (local knowledge vs perception)**Cause a distraction (bluff vs. perception)Cause an obstruction or obstacle (varies)Duck into a blind alley (stealth vs. perception)Get somebody to give the pursuers false directions (bluffing vs. local knowledge)Climb a wall (climbing vs. climbing)\r\n- **Cause a distraction (bluff vs. perception)**Cause an obstruction or obstacle (varies)Duck into a blind alley (stealth vs. perception)Get somebody to give the pursuers false directions (bluffing vs. local knowledge)Climb a wall (climbing vs. climbing)\r\n- **Cause an obstruction or obstacle (varies)**Duck into a blind alley (stealth vs. perception)Get somebody to give the pursuers false directions (bluffing vs. local knowledge)Climb a wall (climbing vs. climbing)\r\n- **Duck into a blind alley (stealth vs. perception)**Get somebody to give the pursuers false directions (bluffing vs. local knowledge)Climb a wall (climbing vs. climbing)\r\n- **Get somebody to give the pursuers false directions (bluffing vs. local knowledge)**Climb a wall (climbing vs. climbing)\r\n\r\n- Climb a wall (climbing vs. climbing)\r\n\r\nClimb a wall (climbing vs. climbing)\r\n\r\nJump an alleyway (jumping vs. jumping)\r\n\r\nDisappear into a crowd (stealth vs. perception)\r\n\r\nSwim a river (swimming vs. swimming)\r\n\r\nSqueeze through a tight gap (acrobatics vs. acrobatics)\r\n\r\nBalance along a narrow ledge (acrobatics or climbing)\r\n\r\nUse a hidden shortcut (local knowledge vs perception)\r\n\r\nCause a distraction (bluff vs. perception)\r\n\r\nCause an obstruction or obstacle (varies)\r\n\r\nDuck into a blind alley (stealth vs. perception)\r\n\r\nGet somebody to give the pursuers false directions (bluffing vs. local knowledge)\r\n\r\n### Vehicle chases\r\n\r\n- **Jump a canyon (driving vs. driving)**Fly though a twisting canyon (piloting vs. piloting)“Ski” a vehicle through a narrow gap (driving vs. driving)\r\n- Jump a canyon (driving vs. driving)\r\n- **Fly though a twisting canyon (piloting vs. piloting)**“Ski” a vehicle through a narrow gap (driving vs. driving)Jump a canyon (driving vs. driving)\r\n- **“Ski” a vehicle through a narrow gap (driving vs. driving)**Jump a canyon (driving vs. driving)\r\n\r\n- Jump a canyon (driving vs. driving)\r\n\r\nJump a canyon (driving vs. driving)\r\n\r\nFly though a twisting canyon (piloting vs. piloting)\r\n\r\n“Ski” a vehicle through a narrow gap (driving vs. driving)\r\n\r\n### Space chases\r\n\r\n- **Dive into an asteroid field (piloting vs. piloting)**Hide in a nebula (stealth vs. computers)\r\n- Dive into an asteroid field (piloting vs. piloting)\r\n- **Hide in a nebula (stealth vs. computers)**Dive into an asteroid field (piloting vs. piloting)\r\n\r\n- Dive into an asteroid field (piloting vs. piloting)\r\n\r\nDive into an asteroid field (piloting vs. piloting)\r\n\r\nHide in a nebula (stealth vs. computers)\r\n\r\n## Speed\r\n\r\nDifferent characters, creatures, vehicles, and ships have different speeds. While skill is the most important factor, speed is also very important. Anybody involved in a race or a chase can add +1d6 to their checks if they have a Speed of 10 or more, and +2d6 if they have a Speed of 20 or more.\r\n\r\n## Random Terrain\r\n\r\nOne way to adjudicate a chase is to randomly determine terrain and obstacles at each stage. Some basic examples using 2d6 can be seen below, although you are encouraged to devise your own tables tailored to your setting. Each obstacle gives the participants opportunity to devise how to use or circumvent them.\r\n\r\nYou may allow a PC an automatic win if they have a way to circumvent an obstacle which their opponent lacks— a PC with a jet pack automatically succeeds at crossing a canyon, for example.\r\n| 2d6 | Foot, Urban | Foot, Wilderness | Vehicle | Space |\r\n| --- | --- | --- | --- | --- |\r\n| 2 | Slick footing | Cliff | Broken bridge | Temporal distortion |\r\n| 3 | Gap/hole | Mud patch | Construction work | Gravitic anomoly |\r\n| 4 | Barrels or crates | Steep incline | Hairpin bend | Unusual star |\r\n| 5 | Twisting alleyways | Dense trees | Slow-moving vehicles | Asteroid field |\r\n| 6 | Slow passing vehicle | Tangled undergrowth | Crates and barrels | Debris |\r\n| 7 | Straight | Straight | Straight | Straight |\r\n| 8 | Wall | Rock formation | Busy junction | Nebula |\r\n| 9 | Ladder | Unsure footing | Canyon | Gas cloud |\r\n| 10 | Crowded street | River | Market square | Convoy |\r\n| 11 | Shortcut | Animal herd | Children in the road | Wandering comet |\r\n| 12 | Pool/river | Canyon | Funeral procession | Ship graveyard |\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Skill"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Chases"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Chemistry\r\n# Chemistry\r\n\r\nCommon skills: chemistry\r\n\r\nChemistry is usually an hourly extended task. Using LOGIV and various skills, characters can accomplish a variety of things. Any character can attempt to use chemistry in order to solve a problem or achieve a goal. Examples of uses of chemistry include:\r\n\r\n- Removing a permanent condition.\r\n- Melting a lock with acid.\r\n- Treating a disease.\r\n- Creating a strong glue.\r\n- Creating a poison or an antidote (for poisons, an opposed task is needed versus the target’s Vital Defense, assuming the poison can be delivered in food or drink; it does 1d6 poison damage plus 1d6 for each die you sacrifice from your dice pool.\r\n- Burn or combust materials like metal and stone. Like drugs, chemical concoctions can also be used to inflict conditions, thus creating a truth drug or a sleeping draught. The concoction must be delivered (imbibed by the target, or similar). A concoction which is eaten or drunk is an hourly task, a poultice, salve, or ointment costs -1d6, and a gas, incense, or smoke costs -2d6. The check is a simple opposed one versus the target’s Vital Defense, and success inflicts a condition with a critical success inflicting a severe condition.\r\n\r\nRemoving a permanent condition.\r\n\r\nMelting a lock with acid.\r\n\r\nTreating a disease.\r\n\r\nCreating a strong glue.\r\n\r\nCreating a poison or an antidote (for poisons, an opposed task is needed versus the target’s Vital Defense, assuming the poison can be delivered in food or drink; it does 1d6 poison damage plus 1d6 for each die you sacrifice from your dice pool.\r\n\r\nBurn or combust materials like metal and stone. Like drugs, chemical concoctions can also be used to inflict conditions, thus creating a truth drug or a sleeping draught. The concoction must be delivered (imbibed by the target, or similar). A concoction which is eaten or drunk is an hourly task, a poultice, salve, or ointment costs -1d6, and a gas, incense, or smoke costs -2d6. The check is a simple opposed one versus the target’s Vital Defense, and success inflicts a condition with a critical success inflicting a severe condition.\r\n\r\nThe player(s) start by declaring their intentions. This goal may be anything they wish, although they may find some goals too hard to accomplish. It might be to devise an acid to melt the lock on a cell door, save an ally who has been poisoned by an assassin, or build an explosive. The GM sets the difficulty as normal, and characters may attempt LOGIV checks until they have reached the target number of successes (typically three successes). Chemistry is a classic example of a very simple use of the extended task mechanism.\r\n\r\nChemistry is an acceptable way to accomplish many tasks, even if other methods are available. A locked door can be picked or hacked by a burglar, or a chemist might attempt to open it by melting the lock with acid. The difficulty of the task does not change—if it’s a Difficult [16] task to pick the lock, then it’s a Difficult [16] chemical task also.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Skill"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Chemistry"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Engineering\r\n# Engineering\r\n\r\nCommon skills: engineering, physics, demolitions, mechanics.\r\n\r\nSometimes colloquially referred to as “doing a science”, engineering is a simple extended task. Using LOGIC and various scientific skills, characters can accomplish a variety of things. Any character can attempt to invoke science in order to solve a problem or achieve a goal.\r\n\r\nThe player(s) start by declaring their intentions. This goal may be anything they wish, although they may find some goals too hard to accomplish. It might be to repair a starship, bypass a cell door, or build an explosive. The GM sets the difficulty as normal, and characters may attempt LOGIC checks until they have reached the target number of successes (typically three successes). The complexity and duration of the task are established by the GM as normal. Engineering is a classic example of a very simple use of the extended task mechanism.\r\n\r\nSome situations require predefined engineering tasks. For example, when a ship falls out of FTL, a minor engineering task is required.\r\n\r\nScience is an acceptable way to accomplish most tasks, even if other methods are available. A locked door can be picked or hacked by a burglar, or an engineer might attempt to open it using her scientific prowess. The difficulty of the task does not change – if it’s a Difficult [16] task to hack the electronic lock, then it’s a Difficult [16] engineering task also.\r\n\r\n## Engineering Technobabble\r\n\r\n| Roll d66 four times and read as \"alpha the beta gamma delta' (e.g. “modify the quantum neutrino filter”). |  |  | d66 | Alpha | Beta | Gamma | Delta |\r\n| --- | --- | --- | --- | --- | --- | --- | --- |\r\n| 11 | increase | microscopic | quantum | relay |\r\n| 12 | decrease | photonic | artificial | inversion |\r\n| 13 | focus | linear | pulse | interference |\r\n| 14 | amplify | sonic | flux | discriminator |\r\n| 15 | reverse | auxiliary | gravimetric | signal |\r\n| 16 | agitate | nucleonic | particle | capacitor |\r\n| 21 | pacify | transwarp | system | configuration |\r\n| 22 | invert | reciprocating | nadion | effect |\r\n| 23 | boost | magnatomic | subspace | disturbance |\r\n| 24 | nullify | quantum | frequency | field |\r\n| 25 | energise | verteron | wavefront | phenomenon |\r\n| 26 | intensify | ambient | spatial | array |\r\n| 31 | electrify | anomalous | alternating | emission |\r\n| 32 | eliminate | modulated | baryon | domain |\r\n| 33 | oscillate | inverted | space-time | coupling |\r\n| 34 | modulate | temporal | dampening | stream |\r\n| 35 | monitor | asymmetrical | tetryon | variance |\r\n| 36 | restrict | atmospheric | neutrino | distortion |\r\n| 41 | connect | magnetic | plasma | controller |\r\n| 42 | convert | phased | interface | actuator |\r\n| 43 | modify | rapid | data | continuum |\r\n| 44 | counteract | ionic | E-M | banks |\r\n| 45 | balance | astrophysical | nano | harmonic |\r\n| 46 | harmonise | nucleonic | polaron | mutation |\r\n| 51 | reset | accelerated | positron | invariance |\r\n| 52 | recalibrate | anterior | override | seal |\r\n| 53 | reroute | primary | access | container |\r\n| 54 | overload | secondary | load | generator |\r\n| 55 | fluctuate | tertiary | tachyon | filter |\r\n| 56 | concentrate | backup | charge | safeguard |\r\n| 61 | extend | master | compression | manifold |\r\n| 62 | redirect | emergency | diagnostic | buffer |\r\n| 63 | correlate | warp | mass | accelerator |\r\n| 64 | synchronise | trifold | nanite | booster |\r\n| 65 | pressurise | psitronic | proton | transponder |\r\n| 66 | recollimate | thermal | radiation | stabilizer |\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Skill"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Engineering"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Hacking Computing\r\n# Hacking & Computing\r\n\r\nCommon skills: computers, cryptology.\r\n\r\nHacking is a non-opposed quick or hourly extended task. Three checks are made against a difficulty benchmark set by the GM. The time required varies, but 1-minute increments are usually appropriate for common civilian systems, and 1-hour increments for hardened or military systems. Hacking gains access to a computerized system, allowing the hacker to obtain information, conduct surveillance, or to control electronic systems.\r\n\r\nHacking does not enable control of mechanoid creatures unless that creature’s description specifically indicates otherwise.\r\n\r\nHacking can also not be used to access bank accounts or gain funds. Funds in the far future are usually carried in cred-chips rather than centralized systems after it was discovered in the 21st Century that the latter were far too vulnerable, especially in the face of advanced technology.\r\n\r\nSuggested difficulty benchmarks for hacking computer systems are shown below. Note that starship control computers (see Space) have their own e-DEFENSE scores which are used as the difficulty number to attack the system. The difficulty benchmarks below are the e-DEFENSE scores of common computer types.\r\n\r\n| Computer System | Difficulty Benchmark (e-DEFENSE) |\r\n| --- | --- |\r\n| Civilian personal computer | Routine [10] |\r\n| Commercial computer system | Challenging [13] |\r\n| Typical security system | Difficult [16] |\r\n| Military security system | Strenuous [25] |\r\n| Maximum security system | Herculean [33] |\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Skill"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Hacking Computing"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Herbalism\r\n# Herbalism\r\n\r\nCommon skills: medicine, herbalism\r\n\r\nMuch like alchemy, herbalism is a type of fantasy science. It’s a simple extended task which works in exactly the same way as an alchemical task, but it uses different skills as it is largely focused on medical situations. Like alchemy, it is based on LOGIV. Herbalism can be used to remove permanent conditions, treat diseases, or perform other medical tasks. See the [Alchemy section](/rules-of-the-game/skill-tasks/alchemy) for details on how to adjudicate this type of task.\r\n\r\nLike alchemical concoctions, herbs can also be used to inflict conditions, thus creating a love potion or a sleep draught. The herb must be delivered (imbibed by the target, or similar). A herb which is eaten or drunk is an hourly task, a poultice, salve, or ointment is a daily task, and a gas, incense, or smoke is a weekly task. The check is a simple opposed one vs. the target’s Defense or Mental Defense, and success inflicts a condition, with a critical success inflicting a severe condition.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Skill"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Herbalism"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Interrogations\r\n# Interrogations\r\n\r\nCommon skills: interrogation, bluffing, intimidation, persuasion, seduction.\r\n\r\nAn interrogation is an opposed extended task. The goal is to extract information from a subject. Unlike many extended tasks, an interrogation can continue indefinitely. However, each time a questioner loses an opposed check, the task complexity increases from quick to hourly to daily, and so on, meaning that the time required gets longer and longer.\r\n\r\nA simple interrogation involves CHA vs. WIL checks, along with the interrogation skill. That skill is used to both conduct and withstand interrogation. Each time the interrogator makes a check, they ask a question. If they win the opposed check, the subject answers truthfully; if they fail, the subject lies or refuses to answer, and the complexity of the task incceases by one stage.\r\n\r\nThe answer can be no more than a short sentence – the interrogator can’t ask “Whatis your entire plan, in full detail?” The GMshould hide the subject’s die rolls; theinterrogator does not know if the subjectis lying (unless they have a relevant psionic power or an interrogation kit).\r\n\r\nIn modern or future settings, interrogation kits indicate when a subject is lying (although the subject may make an opposed CHA vs. INT check, using the bluffing skill if they have it, to deceive the interrogation kit), as well as granting possible bonuses to checks. Some drugs can also obviate the need for an interrogation, or prevent the subject from lying. Of course, a subject cannot reveal information they do not have.\r\n\r\nEach use of an interrogation kit causes 1d6 damage to the subject.\r\n\r\nMore advanced interrogations may use other skills, including persuasion, bluffing, even seduction.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Skill"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Interrogations"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Medicine\r\n# Medicine\r\n\r\nCommon skills: medicine, chemistry, biology, zoology, psychology, genetics, nanotechnology, xenobiology.\r\n\r\nMuch like engineering, medicine is a type of science. It’s a simple extended task which works in exactly the same way as an engineering task, but it uses a variety of medical skills. Like engineering, it is based on LOGIC. [Curing a disease](/injury-death/diseases) is a type of medical task.\r\n\r\nLike chemical concoctions, drugs can also be used to inflict conditions, thus creating a truth drug or a sleeping draught. The drug must be delivered (imbibed by the target, or similar). A drug which is injected, eaten or drunk is an hourly task, a poultice, salve, or ointment costs –1d6, and a gas, incense, or smoke costs –2d6. The check is a simple opposed one versus the target’s Vital Defense, and success inflicts a condition with a critical success inflicting a severe condition.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Skill"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Medicine"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Scanning\r\n# Scanning\r\n\r\nCommon skills: computers, medicine, chemistry, biology, mining.\r\n\r\nUsing a scanner is a simple, single-check task. Characters can use a hand-held scanner to obtain information about a target or the surroundings. All scanners operate in a similar way, although starship sensors (which are essentially giant scanner arrays with immense range) are dealt with in more detail [here](/space/sensors). Basic use of a scanner uses the computers skill, but subject-specific skills like medicine or chemistry can also be used to reveal detailed information.\r\n\r\nWhen operating a scanner, the character may ask one closed question which the GM will answer. The question must fall within the equipment’s area of focus (a medical scanner can’t detect mineral deposits, and a mining scanner can’t diagnose an illness, for example), but other than that any question may be asked. Each question is one use of the scanner, and takes one action.\r\n\r\nTo use a scanner, make a Routine [10] LOG check. Scanners have a 10’ range increment, much like a weapon’s range increment; each increment inflicts a -1d6 die penalty to the dice pool. High quality scanners, of course, add to the dice pool, as do related skills. Before using the scanner, the user must set the scanning range, which determines the dice pool penalty if there is one. The penalty applies to all scans made at that range setting, even if the information gathered pertains to something closer. The scanner will not reveal information about things beyond that range.\r\n\r\nMedical scanner. These scanners only provide information about biological and medical issues. They can be used to diagnose a disease, or provide information about a lifeform. Medical scanners can use any medical or bio skills – medicine, biology, zoology, genetics, zoology, xenobiology, or even psychology.\r\n\r\nMining scanner. Also known as geological scanners, these scanners provide information about substances and structures. They analyse chemicals, minerals, and materials. Mining scanners can use skills like mining, chemistry, and geology. Mining scanners are also used by archeologists.\r\n\r\nScientific scanner. These scanners provide information about energy, substances, and life-forms, but cannot be used to diagnose illnesses. Scientific scanners can use a variety of scientific skills.\r\n\r\nTactical scanner. These scanners only provide information on the number, type, and location of nearby life-forms. They are used for tactical purposes. They are more robust than other scanners. Tactical scanners use the tactics skill (which additionally means that high quality tactical scanners can add to INITIATIVE rolls).\r\n\r\nQuestions asked while using a scanner must be specific closed questions which the GM can answer in a single, short sentence. More detailed information is obtained or narrowed down by asking a series of questions. Any question within the remit of a scanner is allowed, as long as it is specific and can be answered with a single, short sentence. A typical scan sequence may look like this:\r\n\r\n1. Presence of energy sources, life-forms, or substances within range.\r\n\r\n2. Direction and approximate distance.\r\n\r\n3. Type or composition.\r\n\r\n4. More precise data.\r\n\r\nImpediments. There are various impediments to scanning attempts. Things like thick stone, shields, or severe atmospheric conditions, can each impose the standard -1d6 penalty to the attempt (as do range increments).\r\n\r\nLonger range scans. A normal scan takes one round. A longer range scan can be attempted. This takes one minute, and allows the user to multiply the range increment by 10. However, the amount of detail available becomes less granular; questions asked can only be answered with “yes” or “no”.\r\n\r\nScanning creatures. When receiving information about a creature, the answer to a question may be relayed in game mechanics rather than natural English. This is a convenient way to communicate complex data and biological information to a player. It is therefore perfectly reasonable to ask “What is the reptile’s STRENGTH attribute?” and get the answer “14”, or “How much damage does its acid blood do?” and be told “2d6”. The actual data on the scanning device is far more complicated, but this is a useful abstraction.\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Skill"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Scanning"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Tailing\r\n# Tailing\r\n\r\nA simple tailing scenario is an opposed extended task which involves INT checks for the target, and AGI checks for the pursuer (the reverse of the tracking process). The pursuer is the one trying to stay out of sight and not be spotted by their target. The target will use perception, while the pursuer may use stealth or bluffing. This assumes that the target is trying to be inconspicuous or use anti-surveillance techniques. If the target is not worried about a tail, simply use INT (perception) checks.\r\n\r\n- **Change appearance (**disguise vs. perception)\r\n- **Blend with a crowd (**stealth vs. perception)\r\n\r\nChange appearance (disguise vs. perception)\r\n\r\nBlend with a crowd (stealth vs. perception)\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Skill"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Tailing"
    },
    {
      "rawText": "",
      "rawPublic": "# Skill - Tracking\r\n# Tracking\r\n\r\nCommon skills: tracking, stealth, perception, local knowledge.\r\n\r\nTracking someone is an opposed extended task similar to a chase, although much less energetic and more cerebral. Rather than physical tasks, opposed checks are more focused around a contest of mind and skill. The target tries to hide their tracks, while the pursuer tries to uncover them.\r\n\r\nA simple tracking scenario involves involves AGI checks for the target and INT checks for the pursuer, along with the stealth and tracking skills, respectively.\r\n\r\nThis assumes that the target is aware of and trying to shake off the trackers. If the target is unaware of the trackers, simply use a Routine [10] benchmark and a simple extended task.\r\n\r\nA more complex tracking scenario allows the target to try different things such as:\r\n\r\n- **Cross a river to hide tracks (**swimming vs. tracking)\r\n- **Create a decoy or false trail (**tracking vs. tracking)\r\n- **Hide (**stealth vs. tracking)\r\n- **Outpace the trackers (**running vs. tracking)\r\n\r\nCross a river to hide tracks (swimming vs. tracking)\r\n\r\nCreate a decoy or false trail (tracking vs. tracking)\r\n\r\nHide (stealth vs. tracking)\r\n\r\nOutpace the trackers (running vs. tracking)\r\n\r\n## Gaining Information\r\n\r\nAn expert tracker can also glean a lot of information about a location or about creatures who have been present. This is a simple, single-check task using\r\n\r\nLOGIC and the tracking skill. The tracker simply makes a Routine [10] LOG check and ask one closed question which the GM will answer. The question asked must be specific closed questions which the GM can answer with a single, short sentence. Any question can be asked, and each question takes one full minute—the more questions asked, the more detailed information can be determined, but each subsequent question past the first inflicts a –1d6 die penalty. Example sequences of questions might look like this:\r\n| Question | Answer |\r\n| --- | --- |\r\n| Has anybody passed through this clearing in the last hour? | Yes, a group of creatures passed through very recently. |\r\n| How many creatures? | Six creatures. |\r\n| What type of creatures? | They were all humanoid. |\r\n| Was any of them one-legged? | Yes, there was a one-legged humanoid present. |\r\n| Were there any Smallfolk present? | Yes, two Smallfolk. |\r\n| Were the Smallfolk prisoners? | Yes, from the way they were walking, it seems they were | restrained. |\r\n\r\nSource: ~License\r\n",
      "labels": [
        "WOIN",
        "Rule"
      ],
      "tagSymbol": "~",
      "tagValue": "Skill - Tracking"
    }
  ],
  "logs": []
}